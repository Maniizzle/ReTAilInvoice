// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SHOPRURETAIL.Infrastructure.Contexts;

namespace SHOPRURETAIL.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20211103141537_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.11");

            modelBuilder.Entity("SHOPRURETAIL.Domain.Entities.Customer", b =>
                {
                    b.Property<long>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<long?>("CustomerTypeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("TEXT");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(25)
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("TEXT");

                    b.HasKey("CustomerId");

                    b.HasIndex("CustomerTypeId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Customer");

                    b.HasData(
                        new
                        {
                            CustomerId = 1L,
                            CustomerTypeId = 1L,
                            Email = "Ebube@email.com",
                            FirstName = "Chukwu",
                            LastName = "Ebube",
                            MiddleName = "Ngozi",
                            PhoneNumber = "123456789"
                        },
                        new
                        {
                            CustomerId = 2L,
                            CustomerTypeId = 1L,
                            Email = "Otee@email.com",
                            FirstName = "David",
                            LastName = "Otee",
                            MiddleName = "James",
                            PhoneNumber = "12345678910"
                        },
                        new
                        {
                            CustomerId = 3L,
                            CustomerTypeId = 2L,
                            Email = "Nike@email.com",
                            FirstName = "Puma",
                            LastName = "Nike",
                            MiddleName = "Lanre",
                            PhoneNumber = "123456789"
                        },
                        new
                        {
                            CustomerId = 4L,
                            CustomerTypeId = 2L,
                            Email = "boseayo@email.com",
                            FirstName = "Bose",
                            LastName = "Ayo",
                            PhoneNumber = "123456789"
                        },
                        new
                        {
                            CustomerId = 5L,
                            CustomerTypeId = 3L,
                            Email = "bolajoko@email.com",
                            FirstName = "Bola",
                            LastName = "Joko",
                            PhoneNumber = "123456789"
                        });
                });

            modelBuilder.Entity("SHOPRURETAIL.Domain.Entities.CustomerType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("CustomerType");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Name = "Customer"
                        },
                        new
                        {
                            Id = 2L,
                            Name = "Affiliate"
                        },
                        new
                        {
                            Id = 3L,
                            Name = "Employee"
                        });
                });

            modelBuilder.Entity("SHOPRURETAIL.Domain.Entities.DiscountType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsPercentage")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(55)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(19, 2)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("DiscountType");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            IsPercentage = true,
                            Name = "Affiliate",
                            Value = 10m
                        },
                        new
                        {
                            Id = 2L,
                            IsPercentage = true,
                            Name = "Employee",
                            Value = 30m
                        },
                        new
                        {
                            Id = 3L,
                            IsPercentage = true,
                            Name = "Customer",
                            Value = 5m
                        },
                        new
                        {
                            Id = 4L,
                            IsPercentage = false,
                            Name = "100DollarBill",
                            Value = 5m
                        });
                });

            modelBuilder.Entity("SHOPRURETAIL.Domain.Entities.Product", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Category")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Product");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Category = "Groceries",
                            Description = "OLoyin Beans",
                            Name = "Beans",
                            UnitPrice = 500m
                        },
                        new
                        {
                            Id = 2L,
                            Category = "Electronics",
                            Description = "Beats by Dre Headset",
                            Name = "HeadSet",
                            UnitPrice = 5000m
                        },
                        new
                        {
                            Id = 3L,
                            Category = "Groceries",
                            Description = "Power Oil",
                            Name = " Oil",
                            UnitPrice = 1500m
                        },
                        new
                        {
                            Id = 4L,
                            Category = "Groceries",
                            Description = "Poundo Yam",
                            Name = "Poundo Yam",
                            UnitPrice = 7800m
                        },
                        new
                        {
                            Id = 5L,
                            Category = "1 Crate of Raw Egg",
                            Description = "Poundo Yam",
                            Name = "Egg",
                            UnitPrice = 5600m
                        },
                        new
                        {
                            Id = 6L,
                            Category = "Electronics",
                            Description = "Binatone Standing Fan",
                            Name = "Binatone Fan",
                            UnitPrice = 9000m
                        });
                });

            modelBuilder.Entity("SHOPRURETAIL.Domain.Entities.Customer", b =>
                {
                    b.HasOne("SHOPRURETAIL.Domain.Entities.CustomerType", "CustomerType")
                        .WithMany()
                        .HasForeignKey("CustomerTypeId");

                    b.Navigation("CustomerType");
                });
#pragma warning restore 612, 618
        }
    }
}
